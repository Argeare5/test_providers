/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRootsWarehouse,
  IRootsWarehouseInterface,
} from "../IRootsWarehouse";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "storageProof",
        type: "bytes",
      },
    ],
    name: "getStorage",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct StateProofVerifier.SlotValue",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "blockHeaderRLP",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "accountStateProofRLP",
        type: "bytes",
      },
    ],
    name: "processStorageRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    name: "storageRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IRootsWarehouse__factory {
  static readonly abi = _abi;
  static createInterface(): IRootsWarehouseInterface {
    return new utils.Interface(_abi) as IRootsWarehouseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRootsWarehouse {
    return new Contract(address, _abi, signerOrProvider) as IRootsWarehouse;
  }
}
